run-name: Deploy ${{ github.ref_name }}

on:
  push:
    branches:
      - main
      - staging

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-env:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set-env.outputs.env }}
    steps:
      - id: set-env
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            export ENV=production
          fi

          if [ "${{ github.ref_name }}" == "staging" ]; then
            export ENV=staging
          fi

          echo "env=$ENV" >> "$GITHUB_OUTPUT"

  build-and-deploy:
    needs: [get-env]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: Build docs
        run: uv run mkdocs build

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Deploy bundle
        uses: cloudflare/wrangler-action@v3
        with:
          environment: ${{ needs.get-env.outputs.env }}
          apiToken: ${{ secrets.CF_WORKER_API_TOKEN }}
          accountId: ${{ secrets.CF_WORKER_ACCOUNT_ID }}
          packageManager: bun
