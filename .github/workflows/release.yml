name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false

    permissions:
      id-token: write
      contents: write

    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.SEMANTIC_RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.SEMANTIC_RELEASE_BOT_APP_KEY }}

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Force Release Branch to Workflow SHA
        run: |
          git reset --hard ${{ github.sha }}

      - name: Verify Upstream Has Not Changed
        shell: bash
        run: |
          set +o pipefail

          UPSTREAM_BRANCH_NAME="$(git status -sb | head -n 1 | cut -d' ' -f2 | grep -E '\.{3}' | cut -d'.' -f4)"
          printf '%s\n' "Upstream branch name: $UPSTREAM_BRANCH_NAME"

          set -o pipefail

          if [ -z "$UPSTREAM_BRANCH_NAME" ]; then
            printf >&2 '%s\n' "::error::Unable to determine upstream branch name!"
            exit 1
          fi

          git fetch "${UPSTREAM_BRANCH_NAME%%/*}"

          if ! UPSTREAM_SHA="$(git rev-parse "$UPSTREAM_BRANCH_NAME")"; then
            printf >&2 '%s\n' "::error::Unable to determine upstream branch sha!"
            exit 1
          fi

          HEAD_SHA="$(git rev-parse HEAD)"

          if [ "$HEAD_SHA" != "$UPSTREAM_SHA" ]; then
            printf >&2 '%s\n' "[HEAD SHA] $HEAD_SHA != $UPSTREAM_SHA [UPSTREAM SHA]"
            printf >&2 '%s\n' "::error::Upstream has changed, aborting release..."
            exit 1
          fi

          printf '%s\n' "Verified upstream branch has not changed, continuing with release..."

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python Semantic Release
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release

      - name: Run Semantic Release
        id: release
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          semantic-release publish

      - name: Push Tag to Remote
        if: steps.release.outputs.released == 'true'
        env:
          TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin "https://x-access-token:$TOKEN@github.com/${{ github.repository }}.git"
          git push origin refs/tags/${{ steps.release.outputs.tag }}

      - name: Publish Release Assets
        if: steps.release.outputs.released == 'true'
        uses: python-semantic-release/publish-action@v9.21.0
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          tag: ${{ steps.release.outputs.tag }}